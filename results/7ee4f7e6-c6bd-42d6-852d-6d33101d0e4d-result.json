{"name": "test_go_to_last_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"p-paginator-last p-paginator-element p-link\" type=\"button\">...</button> is not clickable at point (596, 230). Other element would receive the click: <span class=\"product-category\" data-v-d9c691ae=\"\">...</span>\n  (Session info: chrome=109.0.5414.75)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x007A6643]\n\t(No symbol) [0x0073BE21]\n\t(No symbol) [0x0063DA9D]\n\t(No symbol) [0x006792B2]\n\t(No symbol) [0x00676970]\n\t(No symbol) [0x00673E0B]\n\t(No symbol) [0x00672548]\n\t(No symbol) [0x00666B13]\n\t(No symbol) [0x0068FD7C]\n\t(No symbol) [0x0066641F]\n\t(No symbol) [0x006900D4]\n\t(No symbol) [0x006A6B09]\n\t(No symbol) [0x0068FB76]\n\t(No symbol) [0x006649C1]\n\t(No symbol) [0x00665E5D]\n\tGetHandleVerifier [0x00A1A142+2497106]\n\tGetHandleVerifier [0x00A485D3+2686691]\n\tGetHandleVerifier [0x00A4BB9C+2700460]\n\tGetHandleVerifier [0x00853B10+635936]\n\t(No symbol) [0x00744A1F]\n\t(No symbol) [0x0074A418]\n\t(No symbol) [0x0074A505]\n\t(No symbol) [0x0075508B]\n\tBaseThreadInitThunk [0x772000F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C07BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77C07B8E+238]", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f58254a9862737a0a016cc9cab188e56\")>\n\n    @pytest.mark.regression()\n    def test_go_to_last_page(browser):\n        test_go_to_login(browser)\n        link = 'http://34.141.58.52:8080/#/'\n        page = MainPage(browser, link)\n        page.open()\n>       page.go_to_last_page()\n\ntests\\test_main_page.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:30: in go_to_last_page\n    last_page.click()\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:403: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000290E3D872E0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C07BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C07B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"p-paginator-last p-paginator-element p-link\" type=\"button\">...</button> is not clickable at point (596, 230). Other element would receive the click: <span class=\"product-category\" data-v-d9c691ae=\"\">...</span>\nE         (Session info: chrome=109.0.5414.75)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x007A6643]\nE       \t(No symbol) [0x0073BE21]\nE       \t(No symbol) [0x0063DA9D]\nE       \t(No symbol) [0x006792B2]\nE       \t(No symbol) [0x00676970]\nE       \t(No symbol) [0x00673E0B]\nE       \t(No symbol) [0x00672548]\nE       \t(No symbol) [0x00666B13]\nE       \t(No symbol) [0x0068FD7C]\nE       \t(No symbol) [0x0066641F]\nE       \t(No symbol) [0x006900D4]\nE       \t(No symbol) [0x006A6B09]\nE       \t(No symbol) [0x0068FB76]\nE       \t(No symbol) [0x006649C1]\nE       \t(No symbol) [0x00665E5D]\nE       \tGetHandleVerifier [0x00A1A142+2497106]\nE       \tGetHandleVerifier [0x00A485D3+2686691]\nE       \tGetHandleVerifier [0x00A4BB9C+2700460]\nE       \tGetHandleVerifier [0x00853B10+635936]\nE       \t(No symbol) [0x00744A1F]\nE       \t(No symbol) [0x0074A418]\nE       \t(No symbol) [0x0074A505]\nE       \t(No symbol) [0x0075508B]\nE       \tBaseThreadInitThunk [0x772000F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C07BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C07B8E+238]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException"}, "steps": [{"name": "Делаем скриншот", "status": "passed", "attachments": [{"name": "result8", "source": "89a9b622-f98e-41c1-83b7-5a6517542604-attachment.png", "type": "image/png"}], "start": 1675177762115, "stop": 1675177762249}], "start": 1675177757668, "stop": 1675177763383, "uuid": "385331fd-b94d-43cd-930d-601b279a7e01", "historyId": "c144dc7201a9e7fc7361beeacf8ef1d3", "testCaseId": "03d9534203ade33cf9ee4d4bbcbab473", "fullName": "tests.test_main_page#test_go_to_last_page", "labels": [{"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "host", "value": "DESKTOP-OKDO2K8"}, {"name": "thread", "value": "13276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}